{"version":3,"sources":["components/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onCreateContact","this","onSubmit","Label","LabelText","type","onChange","required","SubmitBtn","Component","styled","label","span","button","Item","li","Name","Number","Button","ContactListItem","onDelete","onClick","List","ul","ContactList","contacts","onDeleteItem","map","id","key","Filter","defaultProps","filter","App","addContact","contact","uuid","find","alert","prevState","changeFilter","handleFilter","toLowerCase","includes","deleteContact","itemId","localContacts","localStorage","getItem","JSON","parse","prevProp","prevContacts","currentContacts","setItem","stringify","filteredContacts","Wrapper","Section","PageTitle","SectionTitle","length","div","section","h1","h2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0849ce0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onCreateContact: () => {}\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const {name, value} = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n \r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {name, number} = this.state;\r\n \r\n    if(name && number) {\r\n      this.props.onCreateContact(this.state.name, this.state.number);\r\n      return this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n\r\n  render() {\r\n    const {name, number} = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n      <Label>\r\n        <LabelText>Name</LabelText>\r\n        <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} required />\r\n      </Label>\r\n      <Label>\r\n        <LabelText>Number</LabelText>\r\n        <input type=\"text\" name=\"number\" value={number} onChange={this.handleChange} required />\r\n      </Label>\r\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst LabelText = styled.span`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst SubmitBtn = styled.button`\r\n  padding: 10px 16px;\r\n  border: 1px solid #777;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <Item>\r\n      <Name>{name}:</Name>\r\n      <Number>{number}</Number>\r\n      <Button type=\"button\" onClick={onDelete}>Delete</Button>\r\n    </Item>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n};\r\n\r\nconst Item = styled.li`\r\n  margin-bottom: 12px;\r\n  :last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst Name = styled.span`\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Number = styled.span`\r\n  display: inline-block;\r\n  margin-right: 16px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  padding: 4px 8px;\r\n  border: 1px solid #777;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => {\r\n  return (\r\n    <List>\r\n    {contacts.map(({id, name, number}) => {\r\n      return (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDeleteItem(id)}\r\n        />\r\n      );\r\n    })}\r\n  </List>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  })).isRequired,\r\n  onDeleteItem: PropTypes.func.isRequired\r\n};\r\n\r\nconst List = styled.ul`\r\n  padding: 0 0 0 10px;\r\n  margin: 0;\r\n  list-style-position: inside;\r\n`;\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n  return (\r\n    <Label>\r\n      <LabelText>Find contacts by name</LabelText>\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={e => onChange(e.target.value)} />\r\n    </Label>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nFilter.defaultProps = {\r\n  filter: ''\r\n}\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst LabelText = styled.span`\r\n  display: block;\r\n  margin-bottom: 8px;\r\n`;\r\nexport default Filter;","import React, { Component } from 'react';\nimport { uuid } from 'uuidv4';\nimport styled from 'styled-components'\n\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n\n    if (localContacts) {\n      this.setState({\n        contacts: JSON.parse(localContacts)\n      })\n    }\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    const prevContacts = prevState.contacts;\n    const currentContacts =  this.state.contacts;\n\n    if (prevContacts !== currentContacts) {\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\n    }\n  }\n\n  // Add new contact\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number\n    };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact]\n      };\n    })\n  };\n\n  // Filter\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  handleFilter = () => {\n    const {contacts, filter} = this.state;\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  // Delete a contact\n  deleteContact = itemId => {\n\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== itemId),\n      };\n    });\n  }\n\n  render() {\n    const {filter} = this.state;\n    const filteredContacts = this.handleFilter();\n\n    return (\n      <Wrapper>\n        <Section>\n          <PageTitle>Phonebook</PageTitle>\n          <ContactForm onCreateContact={this.addContact} />\n        </Section>\n        <Section>\n          <SectionTitle>Contacts</SectionTitle>\n          {(filteredContacts.length > 1 || filter) && (\n            <Filter value={filter} onChange={this.changeFilter} />\n          )}\n          {filteredContacts.length > 0 && (\n            <ContactList contacts={filteredContacts} onDeleteItem={this.deleteContact} />\n          )}\n        </Section>\n      </Wrapper>\n    )\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 80%;\n  min-height: 100vh;\n  padding: 60px 40px;\n  margin: 0 auto;\n  background-color: #fff;\n`;\n\nconst Section = styled.section`\n  &:not(:last-of-type) {\n    margin-bottom: 40px;\n  }\n`;\n\nconst PageTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 48px;\n  font-weight: 700;\n`;\n\nconst SectionTitle = styled.h2`\n  margin-bottom: 20px;\n  font-size: 42px;\n  font-weight: 500;\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}